<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (c) 2015-2019 Skymind, Inc.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Apache License, Version 2.0 which is available at
  ~ https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  ~
  ~ SPDX-License-Identifier: Apache-2.0
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <groupId>org.deeplearning4j</groupId>
    <artifactId>deeplearning4j-examples</artifactId>
    <version>0.4-rc0-SNAPSHOT</version>
    <name>DeepLearning4j Examplest</name>
    <description>Examples of training different data sets</description>
    <modelVersion>4.0.0</modelVersion>
    
    <properties>
        <nd4j.version>0.4-rc3.7</nd4j.version>
        <dl4j.version>0.4-rc3.7</dl4j.version>
        <canova.version>0.0.0.13</canova.version>
        <jackson.version>2.5.1</jackson.version>
        
        
        <!--<datavec.version>1.0.0-beta5</datavec.version>
        <arbiter.version>1.0.0-beta5</arbiter.version>
        <rl4j.version>1.0.0-beta5</rl4j.version>-->

        <!-- Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support -->
        <!--<scala.binary.version>2.11</scala.binary.version>
        <spark.version>2.4.3</spark.version>-->

        <!--<hadoop.version>2.2.0</hadoop.version>   Hadoop version used by Spark 1.6.3 and 2.2.1 (and likely others)
        <guava.version>19.0</guava.version>
        <logback.version>1.1.7</logback.version>
        <jfreechart.version>1.0.13</jfreechart.version>
        <jcommon.version>1.0.23</jcommon.version>
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven.minimum.version>3.3.1</maven.minimum.version>
        <javafx.version>2.2.3</javafx.version>
        <javafx.runtime.lib.jar>${env.JAVAFX_HOME}/jfxrt.jar</javafx.runtime.lib.jar>
        <aws.sdk.version>1.11.109</aws.sdk.version>
        
        <scala.plugin.version>3.2.2</scala.plugin.version>-->
    </properties>
    
    <distributionManagement>
	<snapshotRepository>
		<id>sonatype-nexus-snapshots</id>
		<name>sonatype Nexus snapshot repository</name>
		<url>https://oss.sonatype.org/content/repositories/snapshots</url>
	</snapshotRepository>
	<repository>
		<id>nexus-releases</id>
		<name>Nexus Release Repository</name>
		<url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
	</repository>
    </distributionManagement>
    
    <dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-x86</artifactId>
			<version>${nd4j.version}</version>
		</dependency>
	</dependencies>
    </dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-nlp</artifactId>
			<version>${dl4j.version}</version>
		</dependency>
	<dependency>
		<groupId>org.deeplearning4j</groupId>
		<artifactId>deeplearning4j-core</artifactId>
		<version>${dl4j.version}</version>
	</dependency>
	<dependency>
		<groupId>org.deeplearning4j</groupId>
		<artifactId>deeplearning4j-ui</artifactId>
		<version>${dl4j.version}</version>
	</dependency>
	<dependency>
		<groupId>org.nd4j</groupId>
		<artifactId>nd4j-x86</artifactId>
		<version>${nd4j.version}</version>
	</dependency>
	<dependency>
		<artifactId>canova-nd4j-image</artifactId>
		<groupId>org.nd4j</groupId>
		<version>${canova.version}</version>
	</dependency>
	<dependency>
		<artifactId>canova-nd4j-codec</artifactId>
		<groupId>org.nd4j</groupId>
		<version>${canova.version}</version>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.dataformat</groupId>
		<artifactId>jackson-dataformat-yaml</artifactId>
		<version>${jackson.version}</version>
	</dependency>
	</dependencies>

    <!--<modules>
        <module>shared-utilities</module>
        <module>dl4j-examples</module>
        <module>dl4j-spark-examples</module>
        <module>datavec-examples</module>
        <module>nd4j-examples</module>
        <module>rl4j-examples</module>
        <module>lstm-hdfs</module>
        <module>tf-import-examples</module>
    </modules>-->

    <!-- Maven Enforcer: Ensures user has an up to date version of Maven before building -->
    <build>
        <plugins>
            <plugin>
            	<groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <!--<id>enforce-default</id>-->
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                	<executable>java</executable>
                </configuration>
            </plugin>

            <!-- Automated Code Formatting -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>1.6</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <filters>
                    	<filter>
                    		<artifact>*:*</artifact>
                    		<excludes>
                    			<exclude>org/datanucleus/**</exclude>
                    			<exclude>META-INF/*.SF</exclude>
                    			<exclude>META-INF/*.DSA</exclude>
                    			<exclude>META-INF/*.RSA</exclude>
                    		</excludes>
                    	</filter>
                    </filters>
                </configuration>
                <executions>
                	<execution>
                		<phase>package</phase>
                		<goals>
                			<goal>shade</goal>
                		</goals>
                		<configuration>
                			<transformers>
                				<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                					<resource>reference.conf</resource>
                				</transformer>
                				<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                				<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                				</transformer>
                			</transformers>
                		</configuration>
                	</execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
